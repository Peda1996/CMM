<?xml version="1.0"?>
<errorTable>
	<error id="default">
		<file>default.html</file>
	</error>
	<error id="invalid Type">
		<file>type.html</file>
	</error>

    <!--#### Preprocessor Errors ####-->

    <error id="unknow preprocessor command">
		<file>preprocessor/unknow_command.html</file>
	</error>
	<error id="identifier required">
		<file>preprocessor/identifier_required.html</file>
	</error>
	<error id="preprocessor value is not an integer">
		<file>preprocessor/not_int.html</file>
	</error>

    <!-- condition errors -->
	<error id="not all preprocessor conditions have ended">
		<file>preprocessor/condition_not_ended.html</file>
	</error>
	<error id="there is no condition, where this #else can be used">
		<file>preprocessor/outside_condition.html</file>
	</error>
	<error id="there is no condition, where this #endif can be used">
		<file>preprocessor/outside_condition.html</file>
	</error>
	
	<!-- include errors -->
	<error id="include not found: ([\w./\s]+)">
		<file>preprocessor/include.html</file>
	</error>
	<error id="no include path specified">
		<file>preprocessor/include.html</file>
	</error>
	
	<!--#### Compiler Errors ####-->
	
	<!-- parser errors -->
	<error id="semicolon expected">
		<file>compiler/parser/semicolon_expected.html</file>
	</error>
	<error id="rpar expected">
		<file>compiler/parser/rpar_expected.html</file>
	</error>
	<error id="lpar expected">
		<file>compiler/parser/lpar_expected.html</file>
	</error>
	<error id='rbrac expected'>
		<file>compiler/parser/rbrac_expected.html</file>
	</error>
	<error id='lbrac expected'>
		<file>compiler/parser/lbrac_expected.html</file>
	</error>
	<error id='rsqu expected'>
		<file>compiler/parser/rsqu_expected.html</file>
	</error>
	<error id='lsqu expected'>
		<file>compiler/parser/lsqu_expected.html</file>
	</error>
	<error id="ident expected">
		<file>compiler/parser/ident_expected.html</file>
	</error>
	<error id="assign expected">
		<file>compiler/parser/assign_expected.html</file>
	</error>
	<error id="this symbol not expected in CMM">
		<file>compiler/parser/symbol_not_expected.html</file>
	</error>

	
	<error id="invalid Factor">
	    <file>default.html</file>
	</error>
	<error id="invalid Statement">
		<file>default.html</file>
	</error>
	<error id="invalid ConstDecl">
		<file>default.html</file>
	</error>
	
	<!-- function declaration -->
	<error id="declaration of function has more parameter as using of itself">
		<file>compiler/function/decl_more_parameter.html</file>
	</error>
	<error id="using of function has more parameters as the declaration">
		<file>compiler/function/using_more_parameter.html</file>
	</error>
	<error id="procedure must return a primitive type, a string or is void">
		<file>compiler/function/return_wrong_decl.html</file>
	</error>
	<error id="forward declaration and declaration doesn't match with the library token">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="function is already forward declared">
		<file>compiler/function/multibl_forward_delc.html</file>
	</error>
	<error id="function has more parameters as forward-declaration declare">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="forward-declaration of function has more parameter as function itself">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="parameter of function and forward declaration has not the same type">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="parameter of function or forward declaration is ref, in the other not">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="return value of forware declaration does not match declaration">
		<file>compiler/function/forward_neq_delc.html</file>
	</error>
	<error id="([\w./]+) has only a forward-declaration">
		<file>compiler/function/only_forward.html</file>
	</error>
	<error id="no function declared">
		<file>default.html</file>
	</error>
	<error id="parameter not declared">
		<file>compiler/function/param_not_decl.html</file>
	</error>
	<error id="there is no type-conversation for ref-parameter(s) allowed">
		<file>default.html</file>
	</error>
	<error id="the number of dimensions in the declaration isn't the same as in the call">
		<file>default.html</file>
	</error>
	<error id="there is no type-conversation for arrays allowed">
		<file>default.html</file>
	</error>
	<error id="only void is allowed">
		<file>default.html</file>
	</error>
	
	<error id="unknow character">
		<file>default.html</file>
	</error>
	<!--<error id="([\w./\s]+) string doesn't have \" at start end endpoint">
		<file>default.html</file>
	</error>-->
	<error id="([\w./]+) no single \\ at the end of a string allowed">
		<file>default.html</file>
	</error>
	
	<!-- casts -->
	<error id="no known cast from ([\w./\s]+)">
		<file>cast.html</file>
	</error>	
	
	<!-- main -->
	<error id="main is not declared as function">
		<file>compiler/main/no_main.html</file>
	</error>
	<error id="function parameters not allowed for main function">
		<file>compiler/main/function_pars_main.html</file>
	</error>
	
	<!-- variable handling -->
	<error id="variable assigment is not allowed for global variables">
	    <file>compiler/variable_decl/global_assign.html</file>
	</error>
	<error id="it is not allowed to declare the same struct in a struct">
		<file>compiler/variable_decl/same_struct_in_struct.html</file>
	</error>
	<error id="variable assigment is not allowed in struct">
		<file>compiler/variable_decl/struct_var_assign.html</file>
	</error>
	<error id="struct must contain at least one variable">
		<file>compiler/variable_decl/struct_no_var.html</file>
	</error>
	<error id="([\w./]+) is not a constant">
		<file>compiler/variable_decl/is_not_const.html</file>
	</error>
	<error id="([\w./]+) is not an int constant">
		<file>compiler/variable_decl/is_not_int_const.html</file>
	</error>
	
	<!-- const handling -->
	<error id="bool constant not allowed here">
		<file>compiler/const_definition/bool_not_allowed.html</file>
	</error>
	<error id="int constant not allowed here">
		<file>compiler/const_definition/int_not_allowed.html</file>
	</error>
	<error id="float constant not allowed here">
		<file>compiler/const_definition/float_not_allowed.html</file>
	</error>
	<error id="char constant not allowed here">
		<file>compiler/const_definition/char_not_allowed.html</file>
	</error>
	<error id="string constant not allowed here">
		<file>compiler/const_definition/string_not_allowed.html</file>
	</error>
	
	<!-- type handling-->
	<error id="type is not a primitive or string">
		<file>compiler/type_error/primitive_or_string.html</file>
	</error>
	<error id="var must be a primitive type or string">
		<file>compiler/type_error/primitive_or_string.html</file>
	</error>
	<error id="name must be an designator">
		<file>compiler/type_error/must_be_designator.html</file>
	</error>
	<error id=".* is not an integer">
		<file>compiler/type_error/is_not_int.html</file>
	</error>
	<error id=".* is not an float"> <!-- TODO special error-template -->
		<file>interpreter/operator/float_overflow.html</file>
	</error>
	<error id=".* is not an array">
		<file>compiler/type_error/is_not_array.html</file>
	</error>
	
	<!-- other -->
	<error id="([\w./]+) not found">
		<file>compiler/notfound.html</file>
	</error>
    <error id="([\w./]+) declared twice">
		<file>compiler/delc_twice.html</file>
	</error>
	<error id="break is not allowed here">
		<file>default.html</file>
	</error>
	<error id="continue is not allowed here">
		<file>default.html</file>
	</error>
	<error id="right operator is not defined">
		<file>default.html</file>
	</error>
	<error id="array call and call by reference cannot mixed up">
		<file>default.html</file>
	</error>
	<error id="array reference must be a primitive type or string">
		<file>default.html</file>
	</error>
	
    <!--#### Runtime Exceptions ####-->

    <!-- operator overflow -->
    <error id="Integer overflow">
		<file>interpreter/operator/int_overflow.html</file>
	</error>
    <error id="Float overflow">
		<file>interpreter/operator/float_overflow.html</file>
	</error>
	<error id="Divided by 0">
		<file>interpreter/operator/divby0.html</file>
	</error>
	
	<!-- array out of bounds -->
	<error id="negative index choosen">
		<file>interpreter/array/negativeindex.html</file>
	</error>
	<error id="too high index choosen">
		<file>interpreter/array/indexoutofbounds.html</file>
	</error>

	<!-- memory handling errors -->
	<error id="([\w./]+) is not initialized">
		<file>interpreter/memory/variable_uninitialized.html</file>
	</error>
	<error id="Return Statement missing">
		<file>interpreter/memory/no_return.html</file>
	</error>
	
	<!-- printf errors -->
	<error id="printf doesn't contain the required amount of arguments">
		<file>interpreter/printf/printftf_arguments.html</file>
	</error>
	<error id="invalid printf parameter">
		<file>interpreter/printf/printf_argument_type.html</file>
	</error>
	
	<!-- other -->
	<error id="unknown interpreter error occurred">
		<file>interpreter/default.html</file>
	</error>
	<error id="StackOverFlow">
		<file>interpreter/error.html</file>
	</error>
	<error id="Stack Underflow">
		<file>interpreter/error.html</file>
	</error>
	<error id="Not supportet node kind">
		<file>interpreter/error.html</file>
	</error>
	<error id="Not supportet ([\w./]+) node kind">
		<file>interpreter/error.html</file>
	</error>
	<error id="type not supported as ident in condition">
		<file>interpreter/error.html</file>
	</error>
	
	<!--#### Gui Exceptions ####-->

	<error id="no input data">
		<file>gui/noinput.html</file>
	</error>

	<!--### Unknown Exceptions ###-->
	<error id="Preprocessor.IOException">
		<file>exception/preprocessor.html</file>
	</error>
	<error id="Preprocessor.([\w./]+)">
		<file>exception/preprocessor.html</file>
	</error>
	<error id="Compiler.([\w./]+)">
		<file>exception/compiler.html</file>
	</error>
</errorTable>
